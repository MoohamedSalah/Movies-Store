@model MoviesMoo.Models.Movies

@{

}


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm("Edit", "Movies", FormMethod.Post, new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Movies</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Name)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Genre", null, new { @class = "form-control", autofocus = "autofocus" })
                @Html.ValidationMessage("Genre", "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ReleasDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleasDate, new { htmlAttributes = new { @class = "form-control", @Value = Model.ReleasDate.HasValue ? Model.ReleasDate.Value.ToString("yyyy-MM-dd") : " " } })
                @Html.ValidationMessageFor(model => model.ReleasDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DateAdd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateAdd, new { htmlAttributes = new { @class = "form-control", @Value = Model.DateAdd.HasValue ? Model.DateAdd.Value.ToString("yyyy-MM-dd") : " " } })
                @Html.ValidationMessageFor(model => model.DateAdd, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NumberInStock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberInStock, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.NumberInStock, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AltPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AltPhoto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AltPhoto, "", new { @class = "text-danger" })
            </div>
        </div>
        @{
            if (Model.MoviesPhoto != null)
            {
                string imageBase64 = Convert.ToBase64String(Model.MoviesPhoto);
                string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);

                <img src="@imageSrc" alt="@Model.AltPhoto" width="300" height="350" />
            }
        }
        <div class="form-group col-md-10">
            <div><strong>If you want Change this </strong></div>
            @Html.TextBox("Image", null, new { type = "file", name = "Files", accept = "image/x-png,image/gif,image/jpeg" })
            <div>
                @Html.ValidationMessage("Image", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
</div>

